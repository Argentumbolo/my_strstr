language:
  - cpp

sudo: required

compiler:
  - clang
  - gcc

os:
  - linux
#  - osx

env:
  global:
    - BUILD_TESTING=1
  matrix:
    - CMAKE_BUILD_TYPE=Release 
    - CMAKE_BUILD_TYPE=Debug

addons:
  artifacts: true
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - valgrind
    - gcc-5
    - g++-5
    - lcov

install:
  - sudo pip install cpp-coveralls
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update && brew install valgrind; fi

script:
  - export CXX="g++-5"
  - export CC="gcc-5"
  - export GCOV="gcov-5"
  - gcc --version
  - echo -----------------------------------------------------------------------
  - echo ${PWD}
  - echo -----------------------------------------------------------------------
  - mkdir Build
  - cd Build
  - cmake .. -DBUILD_TESTING=$BUILD_TESTING -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE
  - make
  - valgrind --leak-check=full --show-leak-kinds=all ctest --output-on-failure

after_success:
  - cd Build
  - echo -----------------------------------------------------------------------
  - echo ${TRAVIS_BUILD_DIR}
  - echo -----------------------------------------------------------------------
  - if [ "$CMAKE_BUILD_TYPE" == "Debug" ]; then make Turtle_coverage; fi
  #- lcov --directory . --capture --output-file coverage.info # capture coverage info
  #- lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  #- lcov --list coverage.info #debug info
  #- genhtml --ignore-errors source coverage.info --output-directory=coverage_report
  #- coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*"

notifications:
  email: false
